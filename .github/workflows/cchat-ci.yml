name: Casual Chat CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CASUAL_CHAT_ORG: iTNTPiston
  CIRCLE_BRANCH: testci
  CIRCLE_BUILD_NUM: 12345
  GOPATH: $HOME/go
  PATH: $PATH:$GOPATH/bin:/usr/local/go/bin

jobs:
  setup:
    name: Setup
    runs-on: cc-gitrunner
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          path: ./mattermost-server

  check-dependency:
    name: Check Dependency
    runs-on: cc-gitrunner
    steps:
      - name: Verify Go Installment
        run: go version
      - name: Verify Make Installment
        run: make -version
      - name: Verify golangci-lint Installment
        run: golangci-lint version
      - name: Verify mattermost-govet Installment
        run: mattermost-govet
      - name: Verify node Installment
        run: node -v
      - name: Verify npm Installment
        run: npm -v

  check-app-layers:
    name: Check App Layers
    runs-on: cc-gitrunner
    needs: [ setup , check-dependency ]
    steps:
      - name: make app-layers
        run: |
          make app-layers
          if [[ -n $(git status --porcelain) ]]; then echo "Please update the app layers using make app-layers"; exit 1; fi
        working-directory: ./mattermost-server

  check-store-layers:
    name: Check Store Layers
    runs-on: cc-gitrunner
    needs: [ setup , check-dependency ]
    steps:
      - name: make store-layers
        run: |
          make store-layers
          if [[ -n $(git status --porcelain) ]]; then echo "Please update the store layers using make store-layers"; exit 1; fi
        working-directory: ./mattermost-server
  
  check-style:
    name: Check Style
    runs-on: cc-gitrunner
    needs: [ check-app-layers , check-store-layers ]
    steps:
      - name: make check-style
        run: |
          make config-reset
          make check-style BUILD_NUMBER='${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}' MM_NO_ENTERPRISE_LINT=true
        working-directory: ./mattermost-server

  setup-webapp:
    name: Setup WebApp
    runs-on: cc-gitrunner
    needs: setup
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          repository: ${CASUAL_CHAT_ORG}/mattermost-webapp
          ref: master
          path: ./mattermost-webapp
      - name: Export Git Commit
        run: |
          export WEBAPP_GIT_COMMIT=$(git rev-parse HEAD)
          echo "$WEBAPP_GIT_COMMIT"
        working-directory: ./mattermost-webapp
      - name: Install Node Modules
        run: npm ci
        working-directory: ./mattermost-webapp

  test-webapp:
    name: Test WebApp
    runs-on: cc-gitrunner
    needs: setup-webapp
    steps:
      - name: npm run test-ci
        run: npm run test-ci
        working-directory: ../mattermost-webapp
  
  build-webapp:
    name: Build WebApp
    runs-on: cc-gitrunner
    needs: test-webapp
    steps:
      - name: make build
        run: make build
        working-directory: ../mattermost-webapp

  # test-server:
  #   name: Test Server
  #   runs-on: cc-gitrunner
  #   needs: [ check-style , check-app-layers , check-store-layers]
#  build:
#    name: Build
#    runs-on: ubuntu-latest
#    steps:

#    - name: Set up Go 1.x
#      uses: actions/setup-go@v2
#      with:
#        go-version: ^1.13
#      id: go

#    - name: Check out code into the Go module directory
#      uses: actions/checkout@v2

#    - name: Get dependencies
#      run: |
#        go get -v -t -d ./...
#        if [ -f Gopkg.toml ]; then
#            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
#            dep ensure
#        fi

#    - name: Build
#      run: go build -v .

#    - name: Test
#      run: go test -v .
